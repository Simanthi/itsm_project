# Generated by Django 5.2.1 on 2025-06-18 04:49

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('service_catalog', '0001_initial'),
        ('service_requests', '0003_alter_servicerequest_category'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='servicerequest',
            name='catalog_item',
            field=models.ForeignKey(blank=True, help_text='The catalog item this service request originated from, if any.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_requests', to='service_catalog.catalogitem'),
        ),
        migrations.CreateModel(
            name='HistoricalServiceRequest',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('request_id', models.CharField(blank=True, db_index=True, help_text='Custom generated Service Request ID (e.g., SR-AA-0001)', max_length=15)),
                ('title', models.CharField(help_text='Summary of the service request', max_length=255)),
                ('description', models.TextField(help_text='Detailed description of the service needed')),
                ('status', models.CharField(choices=[('new', 'New'), ('in_progress', 'In Progress'), ('pending_approval', 'Pending Approval'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('cancelled', 'Cancelled')], default='new', max_length=20)),
                ('category', models.CharField(choices=[('software', 'Software Request'), ('hardware', 'Hardware Request'), ('account', 'Account Management'), ('network', 'Network Access'), ('printer', 'Printer Issue'), ('system', 'Desktop/Laptop Issue'), ('information', 'Information Request'), ('other', 'Other')], max_length=50)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=20)),
                ('resolution_notes', models.TextField(blank=True, help_text='Notes on how the request was fulfilled', null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('assigned_to', models.ForeignKey(blank=True, db_constraint=False, help_text='IT staff assigned to fulfill this request', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('catalog_item', models.ForeignKey(blank=True, db_constraint=False, help_text='The catalog item this service request originated from, if any.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='service_catalog.catalogitem')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Service Request',
                'verbose_name_plural': 'historical Service Requests',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
