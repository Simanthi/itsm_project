# Generated by Django 5.2.1 on 2025-06-29 15:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="IOMCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Category Name"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
            ],
            options={
                "verbose_name": "IOM Category",
                "verbose_name_plural": "IOM Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="IOMTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="e.g., Scheduled System Maintenance, Policy Update, New Software Request",
                        max_length=150,
                        unique=True,
                        verbose_name="Template Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Brief explanation of what this template is for.",
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "fields_definition",
                    models.JSONField(
                        default=list,
                        help_text="JSON schema defining the form fields for this IOM type.",
                        verbose_name="Fields Definition",
                    ),
                ),
                (
                    "approval_type",
                    models.CharField(
                        choices=[
                            ("none", "No Approval Required"),
                            ("simple", "Simple Single Approver"),
                            ("advanced", "Advanced Workflow (via Approval Rules)"),
                        ],
                        default="none",
                        max_length=20,
                        verbose_name="Approval Type",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Only active templates can be used to create new IOMs.",
                        verbose_name="Is Active",
                    ),
                ),
                (
                    "allowed_groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Groups allowed to use this template. If empty, any authenticated user (who can access template listing) can use it, provided it's active.",
                        related_name="usable_iom_templates",
                        to="auth.group",
                        verbose_name="Allowed User Groups",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="templates",
                        to="generic_iom.iomcategory",
                        verbose_name="Category",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_iom_templates",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "simple_approval_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="iom_template_simple_approvals_group",
                        to="auth.group",
                        verbose_name="Simple Approver Group (if type is 'simple')",
                    ),
                ),
                (
                    "simple_approval_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="iom_template_simple_approvals_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Simple Approver User (if type is 'simple')",
                    ),
                ),
            ],
            options={
                "verbose_name": "IOM Template",
                "verbose_name_plural": "IOM Templates",
                "ordering": ["category", "name"],
            },
        ),
        migrations.CreateModel(
            name="GenericIOM",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gim_id",
                    models.CharField(
                        blank=True,
                        editable=False,
                        help_text="System-generated ID, e.g., GIM-AA-0001.",
                        max_length=20,
                        null=True,
                        unique=True,
                        verbose_name="GIM ID",
                    ),
                ),
                (
                    "subject",
                    models.CharField(max_length=255, verbose_name="Subject/Title"),
                ),
                (
                    "data_payload",
                    models.JSONField(
                        default=dict,
                        help_text="Stores the actual data entered by the user, matching the template's fields_definition.",
                        verbose_name="Data Payload",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("pending_approval", "Pending Approval"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "parent_object_id",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Parent Record ID"
                    ),
                ),
                (
                    "simple_approval_action_at",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Action At (Simple Approval)",
                    ),
                ),
                (
                    "simple_approval_comments",
                    models.TextField(
                        blank=True, verbose_name="Comments (Simple Approval)"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "published_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Published At"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_generic_ioms",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "parent_content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="contenttypes.contenttype",
                        verbose_name="Parent Record Type",
                    ),
                ),
                (
                    "simple_approver_action_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="actioned_simple_generic_ioms",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Actioned By (Simple Approval)",
                    ),
                ),
                (
                    "to_groups",
                    models.ManyToManyField(
                        blank=True,
                        related_name="received_generic_ioms_group",
                        to="auth.group",
                        verbose_name="To Groups",
                    ),
                ),
                (
                    "to_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="received_generic_ioms",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="To Users",
                    ),
                ),
                (
                    "iom_template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="instances",
                        to="generic_iom.iomtemplate",
                        verbose_name="IOM Template",
                    ),
                ),
            ],
            options={
                "verbose_name": "Generic IOM",
                "verbose_name_plural": "Generic IOMs",
                "ordering": ["-created_at"],
            },
        ),
    ]
